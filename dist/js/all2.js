let restaurant;var newMap;let review;document.addEventListener("DOMContentLoaded",e=>{initMap2(),DBHelper.submitReview(),DBHelper.IdbToServer(getParameterByName("id"))}),initMap2=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.newMap=L.map("map",{center:[t.latlng.lat,t.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1Ijoidmk1dGFyIiwiYSI6ImNqaWt0OTc3MDFlbGczcHBmb3I2MHZ1M3QifQ.l87jrioq9ldfQiBMHpKX6w",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.newMap))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(n,r)=>{self.restaurant=r,r?(DBHelper.fetchreviewById(t,(e,t)=>{self.review=t,t?fillReviewsHTML():console.error(e)}),fillRestaurantHTML(),e(null,r)):console.error(n)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name;const t=document.getElementById("favToggle");t.addEventListener("click",function(){const n=DBHelper.toggleFavorite(e.is_favorite,e.id);t.innerHTML=`Favorite: ${n}`,e.is_favorite=n}),t.innerHTML=`Favorite: ${e.is_favorite}`,document.getElementById("restaurant-address").innerHTML=e.address;const n=document.getElementById("restaurant-img");n.className="restaurant-img",n.src=DBHelper.imageUrlForRestaurant(e)+".jpg",n.alt=e.name+" located at "+e.address,n.setAttribute("tabindex",0),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");t.setAttribute("tabindex",0);for(let n in e){const r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,r.appendChild(a);const s=document.createElement("td");s.innerHTML=e[n],r.appendChild(s),t.appendChild(r)}}),fillReviewsHTML=((e=self.review)=>{const t=document.getElementById("reviews-container"),n=document.createElement("h3");n.innerHTML="Reviews",t.appendChild(n);const r=document.createElement("button");if(r.id="review-button",r.innerHTML="Submit Review",r.addEventListener("click",openModal),t.appendChild(r),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const a=document.getElementById("reviews-list");e.forEach(e=>{a.appendChild(createReviewHTML(e))}),t.appendChild(a)}),createReviewHTML=(e=>{const t=document.createElement("li"),n=document.createElement("p");t.setAttribute("tabindex",0),n.innerHTML=e.name,t.appendChild(n);const r=document.createElement("p");r.innerHTML=`Rating: ${e.rating}`,t.appendChild(r);const a=document.createElement("p");return a.innerHTML=e.comments,t.appendChild(a),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}),openModal=(()=>{let e=document.getElementById("my-modal");document.getElementById("resIdForForm").setAttribute("value",self.restaurant.id),e.style.display="block"}),closeModal=(()=>{document.getElementById("my-modal").style.display="none"}),window.onclick=(e=>{let t=document.getElementById("my-modal");e.target==t&&(t.style.display="none")});class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(e){let t=new XMLHttpRequest;t.open("GET",DBHelper.DATABASE_URL),t.onload=(()=>{if(200===t.status){const n=JSON.parse(t.responseText);e(null,n)}else{const n=`Request failed. Returned status of ${t.status}`;e(n,null)}}),t.send()}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.find(t=>t.id==e);n?t(null,n):t("Restaurant does not exist",null)}})}static fetchreviewById(e,t){fetch("http://localhost:1337/reviews/?restaurant_id="+e).then(function(e){return e.json()}).then(function(e){return t(null,e)})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((r,a)=>{if(r)n(r,null);else{let r=a;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),n(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/img/${e.photograph}`}static mapMarkerForRestaurant(e,t){const n=new L.marker([e.latlng.lat,e.latlng.lng],{title:e.name,alt:e.name,url:DBHelper.urlForRestaurant(e)});return n.addTo(newMap),n}static toggleFavorite(e,t){const n="http://localhost:1337/restaurants/"+t+"/?is_favorite=";return 1==e|"true"==e|null==e?(e=!1,fetch(n+e,{method:"PUT"}).then(e=>{fetch("http://localhost:1337/restaurants")}).catch(r=>{idbKeyval.set("restaurant_id="+t,{method:"PUT",url:n+e}).then(()=>{caches.open("restaurantReviewCache").then(e=>e.match("http://localhost:1337/restaurants")).then(e=>e.json()).then(n=>{for(let r of n)r.id==t&&(r.is_favorite=e);let r=new Response(JSON.stringify(n));caches.open("restaurantReviewCache").then(e=>{e.put("http://localhost:1337/restaurants",r)})})})})):0==e|"false"==e&&(e=!0,fetch(n+e,{method:"PUT"}).then(e=>{fetch("http://localhost:1337/restaurants")}).catch(r=>{idbKeyval.set("restaurant_id="+t,{method:"PUT",url:n+e}).then(()=>{caches.open("restaurantReviewCache").then(e=>e.match("http://localhost:1337/restaurants")).then(e=>e.json()).then(n=>{for(let r of n)r.id==t&&(r.is_favorite=e);let r=new Response(JSON.stringify(n));caches.open("restaurantReviewCache").then(e=>{e.put("http://localhost:1337/restaurants",r)})})})})),e}static submitReview(){document.getElementById("my-form").addEventListener("submit",function(e){e.preventDefault();const t=document.getElementById("resIdForForm").value,n=document.getElementById("form-name").value,r=document.getElementById("form-rating").value,a=document.getElementById("form-comments").value,s="http://localhost:1337/reviews/?restaurant_id="+t,o={restaurant_id:t,name:n,rating:r,comments:a};fetch("http://localhost:1337/reviews/",{method:"POST",body:JSON.stringify(o)}).then(e=>{fetch(s).then(e=>{window.location.reload()})}).catch(e=>{idbKeyval.set(Date.now(),{method:"POST",body:JSON.stringify(o)}).then(()=>{caches.open("restaurantReviewCache").then(e=>e.match(s)).then(e=>e.json()).then(e=>{e.push(o);let t=new Response(JSON.stringify(e));caches.open("restaurantReviewCache").then(e=>{e.put(s,t)})})}).catch(e=>console.log("It failed!",e)).then(()=>window.location.reload())})})}static IdbToServer(e){idbKeyval.keys().then(e=>e[0]).then(t=>{idbKeyval.get(t).then(e=>{"POST"==e.method?fetch("http://localhost:1337/reviews/",e).then(()=>idbKeyval.del(t)).then(()=>DBHelper.IdbToServer()):(console.log(e),fetch(e.url,{method:e.method}).then(()=>idbKeyval.del(t)).then(()=>DBHelper.IdbToServer()))}).catch(t=>{console.log("no pairs"),e&&fetch("http://localhost:1337/reviews/?restaurant_id="+e).then(()=>console.log("updated cache")).then(()=>fetch("http://localhost:1337/restaurants")),fetch("http://localhost:1337/restaurants")})})}static async testCacheRetrieve(e){const t={restaurant_id:"2",name:"McToad",rating:"2",comments:"this place sucks"},n="http://localhost:1337/reviews/?restaurant_id="+e;caches.open("restaurantReviewCache").then(e=>e.match(n)).then(e=>e.json()).then(e=>{e.push(t);let r=new Response(JSON.stringify(e));caches.open("restaurantReviewCache").then(e=>{e.put(n,r)})})}}var idbKeyval=function(e){"use strict";class t{constructor(e="keyval-store",t="keyval"){this.storeName=t,this._dbp=new Promise((n,r)=>{const a=indexedDB.open(e,1);a.onerror=(()=>r(a.error)),a.onsuccess=(()=>n(a.result)),a.onupgradeneeded=(()=>{a.result.createObjectStore(t)})})}_withIDBStore(e,t){return this._dbp.then(n=>new Promise((r,a)=>{const s=n.transaction(this.storeName,e);s.oncomplete=(()=>r()),s.onabort=s.onerror=(()=>a(s.error)),t(s.objectStore(this.storeName))}))}}let n;function r(){return n||(n=new t),n}return e.Store=t,e.get=function(e,t=r()){let n;return t._withIDBStore("readonly",t=>{n=t.get(e)}).then(()=>n.result)},e.set=function(e,t,n=r()){return n._withIDBStore("readwrite",n=>{n.put(t,e)})},e.del=function(e,t=r()){return t._withIDBStore("readwrite",t=>{t.delete(e)})},e.clear=function(e=r()){return e._withIDBStore("readwrite",e=>{e.clear()})},e.keys=function(e=r()){const t=[];return e._withIDBStore("readonly",e=>{(e.openKeyCursor||e.openCursor).call(e).onsuccess=function(){this.result&&(t.push(this.result.key),this.result.continue())}}).then(()=>t)},e}({});